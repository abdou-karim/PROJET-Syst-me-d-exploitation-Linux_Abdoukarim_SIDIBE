#!/bin/bash

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'
sourcePath=/home/ak-sidibe/Workspace/3_Dev/UNCHK/Syteme_dexploitation/research_library/src/main/shellScript
source $sourcePath/library/LibraryService.sh

# Get the lines and columns of the terminal
LINES=$(tput lines)
COLUMNS=$(tput cols)

# Calculate padding so that the box is in the middle of the screen
VERTICAL_PADDING=$(( ($LINES-9) / 2 ))
HORIZONTAL_PADDING=$(( ($COLUMNS-65) / 2 ))

# Print empty lines for vertical padding
for ((i=1; i<=$VERTICAL_PADDING; i++))
do
echo
done

# Fonction de connexion
signIn() {
    clear
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")╔══════════════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║                  ${GREEN}Welcome, please log in!${BLUE}                  ║${NC}"
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")╚══════════════════════════════════════════════════╝${NC}"
    read -p "$(echo -e "${YELLOW}$(printf "%${HORIZONTAL_PADDING}s")Username : ${NC}")" -r username
    read -sp "$(echo -e "${YELLOW}$(printf "%${HORIZONTAL_PADDING}s")Password : ${NC}")" -r password
    echo
        for ((i=0; i<7; i++)); do
               echo -n "#"
               sleep 0.5
           done
echo
    if grep -q "^$username:.*:$password:" $sourcePath/dataBaseUsers.txt; then
    echo -e "                      ${GREEN}$(printf "%${HORIZONTAL_PADDING}s")Connection successful !${NC}"
    showLibrary
    else
    echo -e "                      ${GREEN}$(printf "%${HORIZONTAL_PADDING}s")Login failed. Try Again. !${NC}"
    sleep 2
    signIn
    fi
    read -n 1
}

signUp(){
  clear
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")╔═════════════════════════════════════════════════════════════════╗${NC}"
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║                      ${GREEN}Create Account${BLUE}                  ║${NC}"
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")╠═════════════════════════════════════════════════════════════════╣${NC}"
    read -p "$(echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║ ${YELLOW}Username :${NC}")" -r username
    read -p "$(echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║ ${YELLOW}Email :${NC}")" -r email
    echo -e "${BLUE}║ ${YELLOW}$(printf "%${HORIZONTAL_PADDING}s")Please choose a role :1) ADMIN\t║ 2) AUTHOR\t║ 3) READER${NC}"
  while true; do
      read -p "$(echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║ ${YELLOW}Role :${NC}")" -r role

      if [ "$role" == "ADMIN" ] || [ "$role" == "AUTHOR" ] || [ "$role" == "READER" ]; then
          break
      else

           echo -e "${BLUE}║$(printf "%${HORIZONTAL_PADDING}s")${RED}Invalid role, Please choose a role : ADMIN\t║ AUTHOR     or\t║READER${NC}${NC}"
      fi
  done
    while true; do
         read -sp "$(echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║ ${YELLOW}Password :\n${NC}")" -r password
         read -sp "$(echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║ ${YELLOW}Confirm your password :\n${NC}")" -r password2
             if [ "$password" == "$password2" ]; then
                 break
             else
                 echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║${RED}Passwords do not match.${NC}"
             fi
    done
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║${GREEN}Successful registration !${NC}"
    echo "$username:$email:$password:$password2:$role" >> dataBaseUsers.txt
    echo
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")║ ${YELLOW}Please choose an option :1) Login\t║ 2) Exit${NC}"
    read -p "$(echo -e "${YELLOW}$(printf "%${HORIZONTAL_PADDING}s")Choose : ${NC}")" -r choice
            case $choice in
                1) signIn ;;
                2) exit ;;
                *) echo -e "${RED}$(printf "%${HORIZONTAL_PADDING}s")Invalid choice.${NC}" && sleep 2 && exit ;;
            esac
    echo -e "${BLUE}$(printf "%${HORIZONTAL_PADDING}s")╚═════════════════════════════════════════════════════════════════╝${NC}"

}